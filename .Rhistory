6893/6861
35/28
52.96/52.3
36/29-1
2500*36/29 /2100
21.9+80^2*0.01-2*80*0.46
1259.265+12.3
library("memisc")
library("lmtest")
library("ggplot2")
df <- diamonds
head(df)
glimpse(df)
qplot(data=df, carat, price)
bg <- qplot(data=df, log(carat), log(price))
bg + geom_hex() # диаграмма рассеяния и шестиугольники плотности
qplot(data=df, carat, price)
> bg <- qplot(data=df, log(carat), log(price))
bg <- qplot(data=df, log(carat), log(price))
bg
model_0 <- lm(data=df, log(price)~carat)
summary(model_0)
model_0 <- lm(data=df, price~carat+y+x)
summary(model_0)
mtable(model_0)
(0.853*(53938 - 3))/((1-0.853)*2)
model_0 <- lm(data=df, price~carat+clarity)
mtable(model_0)
summary(model_0)
model_0 <- lm(data=df, price~carat+depth+cut)
mtable(model_0)
qplot(data = df, log(price), fill=color, geom = "density", alpha = 0.5) + facet_grid(~color)
qplot(data = df, log(price), fill=color, geom = "density", alpha = 0.5)
qplot(data = df, log(price), fill=color, geom = "density", alpha = 0.5) + facet_wrap(~color)
qplot(data=df, log(carat), log(price), color = clarity) + facet_wrap(~cut)
resettest(lm(data=df, price~carat+depth+cut))
waldtest(lm(data = df, price ~ carat + depth), lm(data = df, price ~ carat + depth + cut))
21.9+80^2*0.01-2*80*0.46
21.9+80^2*0.01+2*80*0.46
1259.265+159.5
21.9+70^2*0.01-2*70*0.46
1259.265 + 6,5
1259.265 + 6.5
model_0 <- lm(data=df, price~carat+y)
summary(model_0)
mtable(lm(data=df, price~carat))
mod <- lm(data=df, price~carat)
mtable(mod)
resettest(lm(data=df, price~carat))
qplot(data = df, log(price), fill=cut, geom = "density", alpha = 0.5) + facet_grid(~cut)
help(diamonds)
mod2 <- lm(data=df, price~carat)
mod1 <- lm(data=df, price~carat+clarity)
summary(mod1)
summary(mod2)
0.8948 - 0.8948
0.8948 - 0.8493
data <- airquality
summary(data)
head(data)
library("ggplot2")
?qplot
qplot(data)
?qplot
qplot(data = data)
qplot(data = data, Ozone, Temp)
qplot(data = data, Ozone, Wind)
qplot(data = data, Ozone, Solar.R)
library("car")
mod <- lm(data=data, Ozone~Solar.R+Wind+Temp)
vif(mod)
round(1.329070, digit=3)
data<-na.omit(data)
lambda <- seq(50,0.1,length=30)
library("dplyr") # манипуляции с данными
library("psych") # описательные статистики
library("lmtest") # тесты для линейных моделей
library("glmnet") # LASSO + ridge
X <- model.matrix(data=data, Ozone~0+Solar.R+Wind+Temp)
Y <- data$Ozone
m_lasso <- glmnet(X,Y,alpha=1, lambda=lambda)
coef(m_lasso, s=1)
round(1.60716308, digit=3)
m_lasso <- glmnet(X,Y,alpha=0, lambda=lambda)
coef(m_lasso, s=2)
round(1.57646889, digit=3)
round(coef(m_lasso, s=2), digit=3)
m_lasso <- glmnet(X,Y,alpha=1, lambda=lambda)
plot(m_l,xvar="norm")
plot(m_lasso,xvar="norm")
Q <- prcomp(X,scale=TRUE)
head(Q)
pca1 <- Q$x[,1]
pca2 <- Q$x[,2]
pca3 <- Q$x[,3]
pca4 <- Q$x[,4]
qplot(pca1, pca2)
qplot(pca1, pca3)
qplot(pca2, pca3)
qplot(pca1, pca3)
qplot(data = data, Ozone, Temp)
mod <- lm(data=data, Ozone~Solar.R+Wind+Temp)
round(vif(mod), digit=3)
m_lasso <- glmnet(X,Y,alpha=1, lambda=lambda)
round(coef(m_lasso, s=1), digit=3)
m_lasso <- glmnet(X,Y,alpha=0, lambda=lambda)
round(coef(m_lasso, s=2), digit=3)
126*126*100
log(32*32)
32*32
965.9 / log(32*32)
0.4*120/0.6
dt <- ChickWeight
?ChickWeight
head(dt)
round(mean(dt$weight[dt$Time == 10]),gigit=2)
round(mean(dt$weight[dt$Time == 10]),digit=2)
?factor
factor(dt, Diet)
factor(dt, dt$Diet)
factor(dt)
round(mean(dt$weight[dt$Time == 10 && dt$Diet == 1]),digit=2)
round(mean(dt$weight[dt$Time == 21 && dt$Diet == 1]),digit=2)
dt$Time == 21
dt$Diet == 1
dt$Time == 21 && dt$Diet == 1
dt$Time == 21 & dt$Diet == 1
round(mean(dt$weight[dt$Time == 21 & dt$Diet == 1]),digit=2)
round(mean(dt$weight[dt$Time == 21 & dt$Diet == 2]),digit=2)
round(mean(dt$weight[dt$Time == 21 & dt$Diet == 3]),digit=2)
round(mean(dt$weight[dt$Time == 21 & dt$Diet == 4]),digit=2)
mod <- lm(dt, weight ~ Time+ Diet)
mod <- lm(data = dt, weight ~ Time+ Diet)
symmary(mod)
summary(mod)
round(0.7453, digit=2)
1/sqrt(0.7^2+0.5^2+2*0.25)
round(1/sqrt(0.7^2+0.5^2+2*0.25), digit=2)
round(1/sqrt(0.7^2+0.5^2+2*0.25), digit=3)
library("ggplot2")
qplot(data = diamonds, log(price),fill=cut)+facet_grid(~cut)
qplot(data = diamonds, log(price),color=cut)+facet_grid(~cut)
mod<- lm(data=diamonds, price ~ carat + table  + x + y + z + depth)
summary(mod)
mod<- lm(data=diamonds, price ~ carat + table  + x + y + depth)
summary(mod)
help(diamonds)
69.575 + c(-1,1)*25.287*qt(0.95,53934)
25.287*qt(0.95,53934)
round(69.575 + c(-1,1)*25.287*qt(0.95,53934), digit=2)
190 * 72/ (40*2)
library(Ecdat)
(GDPadj <- GDP$GDPdeflator[n.]/100)
library(Ecdat)
data("BudgetFood")
mod <- lm(data = BudgetFood, wfood ~ totexp + size)
summary(mod)
?predict
predict(mod, newdata=data.frame(totexp=700000,size=4), interval="prediction")
predict(mod, newdata=data.frame(totexp=700000,size=4), interval="prediction", level = 0.9)
round(0.1796138)
round(0.1796138, digit=2)
resettest(mod)
?resettest
library("lmtest")
resettest(mod)
?resettest
h <- na.omit(BudgetFood)
qw <- mtcars
mod <- lm(data = qw, mpg ~ disp + hp + wt)
library("car")
round(vif(mod), digit=2)
glimpse(qw)
library("dplyr")
library("ggplot2")
glimpse(qw)
qw.pca <- prcomp(qw,scale=TRUE)
pca_disp <- qw.pca$disp[,1]
head(pca_disp)
pca_disp
1/0.2
qw.pca
qw.pca$disp
pca_disp <- qw.pca$x[,1]
qwerty <- data.frame(qw$disp, qw$hp, qw$wt)
head(qwerty)
qwerty <- data.frame(disp = qw$disp, hp = qw$hp, wt = qw$wt)
head(qwerty)
qw.pca <- prcomp(qwerty,scale=TRUE)
pca_disp <- qw.pca$x[,1]
round(max(pca_disp), digit=2)
plot(qw.pca)
biplot(h.pca,xlim=c(-1,1))
biplot(qw.pca,xlim=c(-1,1))
new_data = data.frame(mpg = qw$mpg, first_pc = qw.pca$x[,1], second_pc = qw.pca$x[,2],third_pc = qw.pca$x[,3])
mod1 <- lm(data = new_data, mpg ~ first_pc + second_pc)
mod1 <- lm(data = new_data, mpg ~ first_pc + second_pc + third_pc)
mod1 <- lm(data = new_data, mpg ~ first_pc + second_pc)
mod2 <- lm(data = new_data, mpg ~ first_pc + second_pc + third_pc)
summary(mod1)
summary(mod2)
abs(0.8111 - 0.8268)
h <- na.omit(BudgetFood)
waldtest(lm(data = h, wfood ~ totexp + size), lm(data = h, wfood ~ totexp + size + sex))
mean(c(0.1796138,0.6381507))
raw_model <- lm(data = h, wfood ~ totexp + size)
tricky_model <- lm(data = h, wfood ~ totexp + totexp*sex + size + size*sex + sex)
waldtest(raw_model, tricky_model)
library("Ecdat")
data(Griliches)
head(Griliches)
model <- lm(data = Griliches, lw80 ~ age80 + iq + school80 + expr80)
vcov(model)
vcovHC(model)
library("sandwich")
vcovHC(model)
abs(-2.651401e-07 +3.101489e-07)
vcovHC(model,type="HC0")
vcovHC(model,type="HC2")
vcovHC(model,type="HC4")
vcovHC(model,type="HC5")
bptest(model, data=Griliches, varformula = ~ age80 )
library("lmtest")
bptest(model, data=Griliches, varformula = ~ age80 )
gqtest(model, order.by = ~expr80, data=Griliches, fraction = 0.2)
data(Solow)
model2 <- lm(data = Solow, q ~ k + A)
vcov(model2)
vcovHAC(model)
vcovHAC(model2)
abs(9.204408e-05 - 8.759004e-05)
model2 <- lm(data = Solow, q ~ k)
dwt(model2)
res <- dwt(model2)
res$dw
library("car")
dwt(model2)
res <- dwt(model2)
res$dw
model2 <- lm(data = Solow, q ~ A)
bgtest(model2,order = 3)
Sys.setlocale("LC_TIME","C")
getSymbols(Symbols = "INTC",from="2010-01-01", to="2014-02-03",src="google")
plot(INTC$INTC.Close, main = "")
library("zoo") # временные ряды
library("xts") # еще ряды
library("dplyr") # манипуляции с данными
library("broom") # манипуляции
library("ggplot2") # графики
library("quantmod") # загрузка с finance.google.com
library("rusquant") # загрузка с finam.ru
library("sophisthse") # загрузка с sophist.hse.ru
library("Quandl") # загрузка с Quandl
Sys.setlocale("LC_TIME","C")
getSymbols(Symbols = "INTC",from="2010-01-01", to="2014-02-03",src="google")
plot(INTC$INTC.Close, main = "")
Sys.setlocale("LC_TIME","C")
getSymbols(Symbols = "AAPL",from="2010-01-01", to="2014-02-03",src="google")
plot(AAPL$AAPL.Close, main = "")
Sys.setlocale("LC_TIME","C")
getSymbols(Symbols = "GOOG",from="2010-01-01", to="2014-02-03",src="google")
x <- GOOG$GOOG.Close
head(x)
model3 <- lm(data = x, GOOG.Close ~ lag(GOOG.Close,-1) + lag(GOOG.Close,-2))
lag(GOOG.Close,-1)
lag(x,-1)
model3 <- lm(data = x, GOOG.Close ~ lag(x,-1) + lag(x,-2))
summary(model3)
library("lubridate") # работа с датами
library("zoo") # временные ряды
library("xts") # еще ряды
library("dplyr") # манипуляции с данными
library("ggplot2") # графики
library("forecast")
?qnorm
y <- rnorm(1000, sd = 2)
tsdisplay(y)
4-0.3-0.8
set.seed(40)
y <- arima.sim(n=100, list(ar=0.7))
tsdisplay(y)
set.seed(20)
y <- arima.sim(n=100, list(ar=0.7))
tsdisplay(y)
set.seed(10)
y <- arima.sim(n=100, list(ar=0.7))
tsdisplay(y)
set.seed(30)
y <- arima.sim(n=100, list(ar=0.7))
tsdisplay(y)
set.seed(2)
y <- arima.sim(n=100, list(ar=0.99))
tsdisplay(y)
1:100
d <- data.frame(y,1:100)
mod <- glm(data=d, y)
head(d)
d <- data.frame(y,t=1:100)
head(d)
mod <- glm(data=d, y~t+I(t^2)+I(t^3))
summary(mod)
?predict
pr<- predict(mod,y)
pr<- predict(mod,t)
pr<- predict(mod,t,se=TRUE)
pr<- predict(mod,1:100)
(1:3)^2
t = 1:100
temp <- data.frame(t,t^2,t^3)
pr<- predict(mod,temp)
plot(t,pr)
tsdisplay(y)
summary(mod)
mod2 <- glm(data=d, y~0)
summary(mod2)
mod2 <- glm(data=d, y~1)
summary(mod2)
mtable(mod)
library("memisc")
library("lmtest")
library("ggplot2")
library("dplyr")
library("foreign")
library("vcd")
library("devtools")
library("hexbin")
library("pander")
library("sjPlot")
library("knitr")
mtable(mod)
waldtest(mod2, mod)
set.seed(5)
y <- arima.sim(n=100, list(ar=0.5))
summary(Arima(y, order=c(0,0,1)))
summary(Arima(y, order=c(0,0,2)))
summary(Arima(y, order=c(0,0,3)))
summary(Arima(y, order=c(0,0,4)))
0.6550/0.1039
0.2841/0.1863
library("sophisthse")
y <- sophisthse("HHI_Q_I")
tsdisplay(y)
head(y)
dt <- y$HHI_Q_DIRI[1:89]
summary(dt)
dt
?len
?length
length(dt)
AIC(Arima(dt, order=c(3,1,0)))
AIC(Arima(dt, order=c(1,1,0)))
AIC(Arima(dt, order=c(2,1,0)))
AIC(Arima(dt, order=c(1,1,1)))
dt["2011 Q2"]
dt[2011 Q2]
dt[62]
mod_a <- auto.arima(dt[62:89])
AIC(mod_a)
mod <- Arima(dt, order=c(2,1,0))
prognoz <- forecast(mod, h=3)
summary(mod)
prognoz
mod1 <- Arima(dt, order=c(1,1,1)); prognoz1 <- forecast(mod1, h=3)
mse1 <- sum((prognoz$Forecast - dt[87:98]))/3
mse1
prognoz$Forecast
prognoz1$Forecast
prognoz1$fit
prognoz1["Point Forecast"]
prognoz1$Point Forecast
prognoz1$PointForecast
mod1 <- Arima(dt, order=c(1,1,1)); prognoz1 <- forecast(mod1, h=3)
mse1 <- sum((prognoz$Forecast - dt[87:98]))/3
mod1 <- Arima(dt[1:86], order=c(1,1,1)); prognoz1 <- forecast(mod1, h=3)
prognoz1
mse1 <- sum((c(237.8337,218.8755,226.3736) - dt[87:98])^2)/3
dt[87:98]
dt[87:89]
mse1 <- sum((c(237.8337,218.8755,226.3736) - dt[87:89])^2)/3
mse1
sqrt(417)
mod2 <- Arima(dt[1:86], order=c(0,1,1)); prognoz2 <- forecast(mod2, h=3)
prognoz2
mse2 <- sum((c(219.9788,219.9788,219.9788) - dt[87:89])^2)/3
mod3 <- Arima(dt[1:86], order=c(1,0,2)); prognoz3 <- forecast(mod3, h=3)
prognoz3
mse3 <- sum((c(151.8001,110.8538,128.5571) - dt[87:89])^2)/3
mod4 <- Arima(dt[1:86], order=c(1,1,2)); prognoz4 <- forecast(mod4, h=3)
prognoz4
mse4 <- sum((c(238.9347,228.7120,227.3609) - dt[87:89])^2)/3
fit <- Arima(dt, order=c(1,1,1), seasonal=c(0,0,1))
AIC(fit)
summary(fit)
AIC(mod4)
set.seed(10)
y1 <- arima.sim(n=100, list(ar=0.7))
plot(y1,type="p",axes=T, ylab = "variable Y")
rect(20,-1000,25,1000,col="#FFCCEE",border="#FFCCEE")
rect(70,-1000,80,1000,col="#FFCCEE",border="#FFCCEE")
par(new=TRUE)
plot(y1,type="l",ylab="")
set.seed(70)
y1 <- arima.sim(n=100, list(ar=0.7))
plot(y1,type="l",axes=T, ylab = "variable Y")
rect(20,-1000,25,1000,col="#FFCCEE",border="#FFCCEE")
rect(70,0,80,1000,col="#FFCCEE",border="#FFCCEE")
par(new=TRUE)
plot(y1,type="l",ylab="")
set.seed(30)
y1 <- arima.sim(n=100, list(ar=0.7))
plot(y1,type="l",axes=T, ylab = "variable Y")
rect(20,-1000,25,1000,col="#FFCCEE",border="#FFCCEE")
rect(70,-1000,80,1000,col="#FFCCEE",border="#FFCCEE")
par(new=TRUE)
plot(y1,type="l",ylab="")
a <- rep(0, 89)
dt
a[62:69] = 1
a
y <- DATA.FRAME(dt,a)
y <- data.frame(dt,a)
summary(Arima(y, order=c(1,1,2)))
summary(Arima(y, order=c(1,1,2),xreg=a))
summary(Arima(dt, order=c(1,1,2),xreg=a))
2*3/4
6*25/(25+16)
round(6*25/(25+16), digit=2)
round(6+4/25, digit=2)
library("ggplot2")
library("caret")
data('diamonds')
data("diamonds")
head(diamonds)
set.seed(12345)
train_ind <- createDataPartition(h$price, p=0.8, list=FALSE)
h_train <- h[train_ind,]
h_test <- h[-train_ind,]
h <- diamonds
set.seed(12345)
train_ind <- createDataPartition(h$price, p=0.8, list=FALSE)
h_train <- h[train_ind,]
h_test <- h[-train_ind,]
model <- lm(data=h_train, log(price)~log(carat)+log(table)+clarity)
pred <- predict(model, h_test)
set.seed(12345)
train_ind <- createDataPartition(h$price, p=0.8, list=FALSE)
h <- diamonds
h2 <- mutate(h, logprice=log(price), logtotsp=log(carat),clarity)
library("dplyr")
h2 <- mutate(h, logprice=log(price), logtotsp=log(carat),clarity)
set.seed(12345)
train_ind <- createDataPartition(h2$price, p=0.8, list=FALSE)
h_train <- h2[train_ind,]
h_test <- h2[-train_ind,]
model <- lm(data=h_train, log(price)~log(carat)+log(table)+clarity)
pred <- predict(model, h_test)
q <- exp(pred)
mean(abs(q-h_test$price))
mean(q)
mean(h_test$price)
mean((q-h_test$price))
sum( (q - h_test$price)^2) / (10^9)
data("CollegeDistance")
h <- CollegeDistance
library("dplyr") # манипуляции с данными
library("caret") # стандартизованный подход к регрессионным и классификационным моделям
library("AER") # инструментальные переменные
library("ggplot2") # графики
library("sandwich") # робастные стандартные ошибки
library("ivpack") # дополнительные плющки для инструментальных переменных
library("memisc") # табличка mtable
data("CollegeDistance")
h <- CollegeDistance
help(ivreg)
model_iv <- ivreg(data=h, wage~region+gender+ethnicity+unemp+education | region, gender, ethnicity, unemp, distance )
head(h)
model_iv <- ivreg(data=h, wage~region+gender+ethnicity+unemp+education | region+gender+ethnicity+unemp +distance )
coeftest(model_iv)
round(0.6561928,digit=2)
sum(c(58*1.1,22,98,47*1.1,8*1.1,22.11))/ sum(c(58,22,98,44,8,21))
sum(c(58*1.1,22,98,47*1.1,8*1.1,22.11)) -sum(c(58,22,98,44,8,21))
62/54
24/19
102/78
52/42
6/5
44/47
6/8
22/24
18/21
110*0.56+680*0.48
sum(c(236,242,103,110,162,154,339,350,612,680))
350*1.1*0.2
180*0.18
180*1.1*0.05
-10*60+6*72
300 * (64*60 - 34*72)
220/185
(220+264) / sum(c(380,264,220,132,68))
sum(c(360,254,180,108,74))/sum(c(360,268,185,120,50))
420 + 420*1.05
420*0.05
420 - 420/1.05
0.25^(1/7)
1-0.25^(1/7)
622/136
136*20
136/115
622/324
41*41 + 1700
4*685.55
setwd("C:/Users/Степан/OneDrive/Учебники/Программирование/econometrics")
